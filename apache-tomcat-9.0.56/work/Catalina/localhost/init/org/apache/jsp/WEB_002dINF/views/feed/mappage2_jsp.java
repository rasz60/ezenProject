/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-03-25 08:15:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.feed;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mappage2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/sql.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/x.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1644909417825L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"_csrf\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<meta name=\"_csrf_header\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\" integrity=\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=92b6b7355eb56122be94594a5e40e5fd&libraries=services\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=92b6b7355eb56122be94594a5e40e5fd\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/feed/kakaomap/kakaomap.css\" />\r\n");
      out.write("\r\n");
      out.write("<!-- tab-menu css -->\r\n");
      out.write("<style>\r\n");
      out.write("html, body {\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div.container {\r\n");
      out.write("	height: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".planlist #kakaobox {\r\n");
      out.write("	max-width: 100%;\r\n");
      out.write("	min-height: 800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#tabdiv{\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.tabs{\r\n");
      out.write("  margin: 0px;\r\n");
      out.write("  padding: 0px;\r\n");
      out.write("  list-style: none;\r\n");
      out.write("}\r\n");
      out.write("ul.tabs li{\r\n");
      out.write("  background: none;\r\n");
      out.write("  color: #222;\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  padding: 10px 15px;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.tabs li.current{\r\n");
      out.write("  background: #ededed;\r\n");
      out.write("  color: #222;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tab-content{\r\n");
      out.write("  display: none;\r\n");
      out.write("  background: #ededed;\r\n");
      out.write("  padding: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tab-content.current{\r\n");
      out.write("  display: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("textarea {\r\n");
      out.write("	resize: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#deleteBtn {\r\n");
      out.write("	height: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container-fluid\" id=\"tabdiv\">\r\n");
      out.write("	<ul class=\"tabs\">\r\n");
      out.write("		<li class='tab-link current' data-tab='tab-1'>date1</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<button type=\"button\" id=\"submitAll\" class=\"btn btn-sm btn-primary float-right\">전체 전송</button>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"tab-1\" class=\"mt-2 tab-content current\">\r\n");
      out.write("		<h3>DATE 1 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plan.startDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("		<hr/>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"planlist row\">\r\n");
      out.write("			<!-- 맵 생성 -->\r\n");
      out.write("			<div id=\"kakaobox\" class=\"map_wrap col-6\">\r\n");
      out.write("				<div id=\"map\" style=\"width:100%;height:100%;position:relative;overflow:hidden;\"></div>\r\n");
      out.write("				<div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("			    	<div class=\"option\">\r\n");
      out.write("			        	<div>\r\n");
      out.write("			            	<form onsubmit=\"searchPlaces(); return false;\">\r\n");
      out.write("			                	키워드 : <input type=\"text\" value=\"이태원 맛집\" id=\"keyword\" size=\"15\"> \r\n");
      out.write("			                	<button type=\"submit\">검색하기</button> \r\n");
      out.write("			            	</form>\r\n");
      out.write("			        	</div>\r\n");
      out.write("			    	</div>\r\n");
      out.write("			    	<hr/>\r\n");
      out.write("			    	<ul id=\"placesList\"></ul>\r\n");
      out.write("			    	<div id=\"pagination\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<!-- input창 -->\r\n");
      out.write("			<div class=\"col-6 inputContainer\">\r\n");
      out.write("				<div class=\"title mb-4\">\r\n");
      out.write("					총 갯수 : <span class=\"showIndex\">1</span> / 10\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-success insertButton btn-sm float-right\">추가</button>\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-sm btn-primary submit float-right mr-1\">저장</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<form id=\"frm1\" name=\"frm1\" action=\"insertMap\" method=\"post\" data-count=\"0\">\r\n");
      out.write("					<!-- User submit Input -->\r\n");
      out.write("					<div class=\"detail mt-5 py-2 border\">\r\n");
      out.write("						<h3 class=\"font-italic ml-2 d-inline\">Place</h3>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-sm btn-danger deleteBtn float-right mr-2\">-</button>\r\n");
      out.write("						<hr />\r\n");
      out.write("						<div class=\"inputbox row mx-0 justify-content-between\">\r\n");
      out.write("							<!-- [fk] planNum : planMst_planNum-->\r\n");
      out.write("							<input type=\"hidden\" class=\"form-control\" name=\"planNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plan.planNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly/>\r\n");
      out.write("							<!-- [pk] planDtNum : new input ? value=0 : value=planDtNum -->\r\n");
      out.write("							<input type=\"hidden\" class=\"form-control\" name=\"planDtNum\" value=\"\" readonly/>\r\n");
      out.write("							<!-- planDate : planDt_planDate -->\r\n");
      out.write("							<input type=\"hidden\" class=\"form-control\" name=\"planDate\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plan.startDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly/>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"form-group col-4\">\r\n");
      out.write("								<label for=\"placeName\">placeName</label>\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" name=\"placeName\" id=\"placeName\" data-index=\"0\" readonly/>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("							<div class=\"form-group col-4\">\r\n");
      out.write("								<label for=\"startTime\">StartTime</label>\r\n");
      out.write("								<input type=\"time\" class=\"form-control\" name=\"startTime\" id=\"startTime\" data-index=\"0\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("							<div class=\"form-group col-4\">\r\n");
      out.write("								<label for=\"endTime\">EndTime</label>\r\n");
      out.write("								<input type=\"time\" class=\"form-control\" name=\"endTime\" id=\"endTime\" data-index=\"0\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("							<div class=\"form-group col-12\">\r\n");
      out.write("								<label for=\"transpotation\">교통수단</label>\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" name=\"transpotation\" id=\"transpotation\" data-index=\"0\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("						\r\n");
      out.write("							<div class=\"form-group col-12 toggle-box\">\r\n");
      out.write("								<label for=\"details\">상세 일정</label>\r\n");
      out.write("								<textarea rows=\"5\" class=\"form-control\" name=\"details\" id=\"details\" data-index=\"0\"></textarea>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 저장 누를 시 생성되는 modal창 -->\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	<input id=\"modalBtn\" type=\"hidden\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\" value=\"modal\"/>\r\n");
      out.write("	<!-- modal창 -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n");
      out.write("		<div class=\"modal-dialog modal-dialog-centered modal-sm text-center\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header bg-light\">\r\n");
      out.write("					<h4 class=\"modal-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;POST작성</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body bg-light\">\r\n");
      out.write("					<h4>작성되었습니다.</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-footer bg-light\">\r\n");
      out.write("					<button id=\"closeBtn\" type=\"button\" class=\"btn btn-default btn-success\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/feed/kakaomap/kakaomap.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("		\r\n");
      out.write("	// 페이지가 세팅되면 #frm1에 detail 박스 코드를 변수로 저장 (최초 한 번만)\r\n");
      out.write("	var detailbox = $('#frm1').html();\r\n");
      out.write("	\r\n");
      out.write("	// 일정 날짜 수(dateCount)만큼 tab-link와 tabdiv 생성\r\n");
      out.write("	for ( var i = 2; i <= dateCount; i++ ) {\r\n");
      out.write("		var tab_link = \"<li class='tab-link' data-tab='tab-\" + i  + \"'>date\" + i  + \"</li>\";\r\n");
      out.write("		\r\n");
      out.write("		var tab_div = '<div id=\"tab-' + i + '\" class=\"mt-2 tab-content current\">' \r\n");
      out.write("			        + $('#tab-1').html();\r\n");
      out.write("		            + '</div>';\r\n");
      out.write("		            \r\n");
      out.write("		$('.tabs').append(tab_link);\r\n");
      out.write("		$('#tabdiv').append(tab_div);\r\n");
      out.write("		\r\n");
      out.write("		$('#tab-' + i ).removeClass('current');\r\n");
      out.write("		$('#tab-' + i + '>h3').text('DATE ' + i + ' : ' + dates[i-1]);\r\n");
      out.write("		$('#tab-' + i + ' #frm1').attr('name', 'frm' + i);\r\n");
      out.write("		$('#tab-' + i + ' #frm1').attr('id', 'frm' + i);\r\n");
      out.write("		$('#tab-' + i + ' input#planDate1').val(dates[i-1]);\r\n");
      out.write("	};\r\n");
      out.write("\r\n");
      out.write("	// tab-link를 클릭 변경 이벤트\r\n");
      out.write("	$('ul.tabs li').click(function(){\r\n");
      out.write("	    var tab_id = $(this).attr('data-tab');\r\n");
      out.write("		\r\n");
      out.write("	    // 다른 tab-link와 tab-div의 current class를 삭제\r\n");
      out.write("	    $('ul.tabs li').removeClass('current');\r\n");
      out.write("	    $('.tab-content').removeClass('current');\r\n");
      out.write("	    \r\n");
      out.write("	    // 본인에게만 current class 부여\r\n");
      out.write("	    $(this).addClass('current');\r\n");
      out.write("		$(\"#\"+tab_id).addClass('current');\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$('#submitAll').click(function() {\r\n");
      out.write("		\r\n");
      out.write("		let data = $('form').serialize();\r\n");
      out.write("		\r\n");
      out.write("		console.log($('form').serialize());\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'insertPlanDt.do',\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			data: data,\r\n");
      out.write(" 		    beforeSend: function(xhr){\r\n");
      out.write("	 		   	var token = $(\"meta[name='_csrf']\").attr('content');\r\n");
      out.write("	 			var header = $(\"meta[name='_csrf_header']\").attr('content');\r\n");
      out.write(" 		        xhr.setRequestHeader(header, token);\r\n");
      out.write(" 		    },\r\n");
      out.write("			success: function() {\r\n");
      out.write("				console.log('success');\r\n");
      out.write("			},\r\n");
      out.write("			error: function() {\r\n");
      out.write("				console.log('error');				\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$('.inputContainer .insertButton').on('click', function() {\r\n");
      out.write("		var target = $(this).parent().siblings('form');\r\n");
      out.write("		var value = Number(target.attr('data-count')) + 1;\r\n");
      out.write("		\r\n");
      out.write("		if ( value > 9 ) {\r\n");
      out.write("			alert('하루에 열개 이상의 일정을 생성할 수 없습니다.');\r\n");
      out.write("			return false;\r\n");
      out.write("		} else {\r\n");
      out.write("			target.attr('data-count', value);\r\n");
      out.write("			target.append(detailbox);\r\n");
      out.write("			\r\n");
      out.write("			$('.inputbox .form-control').attr('data-index', value);\r\n");
      out.write("			$('form[id^=\"frm\"] .deleteBtn').on('click', function() {\r\n");
      out.write("				var target = $(this).parent().parent('form');\r\n");
      out.write("				var value = Number(target.attr('data-count'));\r\n");
      out.write("				\r\n");
      out.write("				if ( value == 0 ) {\r\n");
      out.write("					alert('최소 한 개의 일정이 있어야 합니다.');\r\n");
      out.write("					return false;\r\n");
      out.write("						\r\n");
      out.write("				} else {\r\n");
      out.write("					target.attr('data-count', value-1);\r\n");
      out.write("					target.siblings('.title').children('.showIndex').text(value);\r\n");
      out.write("					\r\n");
      out.write("					$(this).parent().remove();\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			$(this).siblings('.showIndex').text(Number(value + 1));\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- date 계산, tab-menu 생성 -->\r\n");
      out.write("<script>\r\n");
      out.write("function strToDate(str) {\r\n");
      out.write("	let y = str.slice(0, 4);\r\n");
      out.write("	let m = Number(str.slice(5, 7)) - 1;\r\n");
      out.write("	let d = str.slice(8);\r\n");
      out.write("	\r\n");
      out.write("	return new Date(y, m, d);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function dateToStr(date) {\r\n");
      out.write("	let y = date.getFullYear();\r\n");
      out.write("	let m = date.getMonth() + 1;\r\n");
      out.write("	let d = date.getDate();\r\n");
      out.write("	\r\n");
      out.write("	if ( m < 9 ) {\r\n");
      out.write("		m = \"0\" + m;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if ( d < 9 ) {\r\n");
      out.write("		d = \"0\" + d;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	return y+\"-\"+m+\"-\"+d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getPlanDate(start, end) {\r\n");
      out.write("	var dates = [];\r\n");
      out.write("	dates.push(dateToStr(start));\r\n");
      out.write("\r\n");
      out.write("	var date = new Date(start);\r\n");
      out.write("	\r\n");
      out.write("	while ( date < end ) {\r\n");
      out.write("		date.setDate(date.getDate() + 1);\r\n");
      out.write("		\r\n");
      out.write("		dates.push(dateToStr(date));\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	return dates;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function deletebox() {	\r\n");
      out.write("	$('form[id^=\"frm\"] .deleteBtn').on('click', function() {\r\n");
      out.write("		var target = $(this).parent().parent('form');\r\n");
      out.write("		var value = Number(target.attr('data-count'));\r\n");
      out.write("		\r\n");
      out.write("		if ( value == 0 ) {\r\n");
      out.write("			alert('최소 한 개의 일정이 있어야 합니다.');\r\n");
      out.write("			return false;\r\n");
      out.write("			\r\n");
      out.write("		} else {\r\n");
      out.write("			target.attr('data-count', value-1);\r\n");
      out.write("			$(this).parent().remove();\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var sDate = strToDate('");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("');\r\n");
      out.write("var eDate = strToDate('");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("');\r\n");
      out.write("var dateCount = (eDate.getTime() - sDate.getTime()) / (1000*60*60*24);\r\n");
      out.write("var dates = getPlanDate(sDate, eDate);\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("/*\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\r\n");
      out.write("	//latitude, longitude, placeName 값이 들어갈 input창 생성\r\n");
      out.write("	var Form = $(\"#frm\")\r\n");
      out.write("	var index = 0    	\r\n");
      out.write("	 $(\"#insertButton\").on(\"click\", function () { \r\n");
      out.write("	     if(index == 10) {  // input창 생성 제한\r\n");
      out.write("	        alert(\"10개 까지만 됩니다.\")\r\n");
      out.write("	        return false;\r\n");
      out.write("	    };\r\n");
      out.write("	     \r\n");
      out.write("	    var newDiv = document.createElement(\"div\")\r\n");
      out.write("	    newDiv.setAttribute(\"class\", \"newDiv\")\r\n");
      out.write("	    newDiv.setAttribute(\"name\", \"index\")\r\n");
      out.write("	\r\n");
      out.write("	    var newInput1 = document.createElement(\"input\") //위도 input\r\n");
      out.write("	    newInput1.setAttribute(\"id\", \"latitude\"+index)\r\n");
      out.write("	    newInput1.setAttribute(\"type\", \"text\")\r\n");
      out.write("	    newInput1.setAttribute(\"name\", \"latitude\"+index)\r\n");
      out.write("	    newInput1.setAttribute(\"value\", \"\")\r\n");
      out.write("	    newInput1.setAttribute(\"readonly\", \"true\")\r\n");
      out.write("	    var newInput2 = document.createElement(\"input\") //경도 input\r\n");
      out.write("	    newInput2.setAttribute(\"id\", \"longitude\"+index)\r\n");
      out.write("	    newInput2.setAttribute(\"type\", \"text\")\r\n");
      out.write("	    newInput2.setAttribute(\"name\", \"longitude\"+index)\r\n");
      out.write("	    newInput2.setAttribute(\"value\", \"\")\r\n");
      out.write("	    newInput2.setAttribute(\"readonly\", \"true\")\r\n");
      out.write("	    var newInput3 = document.createElement(\"input\") //장소명 input\r\n");
      out.write("	    newInput3.setAttribute(\"id\", \"placeName\"+index)\r\n");
      out.write("	    newInput3.setAttribute(\"type\", \"text\")\r\n");
      out.write("	    newInput3.setAttribute(\"name\", \"placeName\"+index)\r\n");
      out.write("	    newInput3.setAttribute(\"value\", \"\")\r\n");
      out.write("	    newInput3.setAttribute(\"readonly\", \"true\")    \r\n");
      out.write("	    var newInput4 = document.createElement(\"input\") //카테고리 input\r\n");
      out.write("	    newInput4.setAttribute(\"id\", \"category\"+index)\r\n");
      out.write("	    newInput4.setAttribute(\"type\", \"text\")\r\n");
      out.write("	    newInput4.setAttribute(\"name\", \"category\"+index)\r\n");
      out.write("	    newInput4.setAttribute(\"value\", \"\")\r\n");
      out.write("	    newInput4.setAttribute(\"readonly\", \"true\")\r\n");
      out.write("	    var newInput5 = document.createElement(\"input\") //카테고리 input\r\n");
      out.write("	    newInput5.setAttribute(\"id\", \"address\"+index)\r\n");
      out.write("	    newInput5.setAttribute(\"type\", \"text\")\r\n");
      out.write("	    newInput5.setAttribute(\"name\", \"address\"+index)\r\n");
      out.write("	    newInput5.setAttribute(\"value\", \"\")\r\n");
      out.write("	    newInput5.setAttribute(\"readonly\", \"true\")\r\n");
      out.write("	     \r\n");
      out.write("	    var removeInput = document.createElement(\"button\") //삭제 버튼\r\n");
      out.write("	    removeInput.setAttribute(\"type\", \"button\")\r\n");
      out.write("	    removeInput.setAttribute(\"id\", \"removebtn\")\r\n");
      out.write("	    removeInput.setAttribute(\"class\", \"btn btn-danger\")\r\n");
      out.write("	    removeInput.textContent = \"삭제\"\r\n");
      out.write("		       	\r\n");
      out.write("	    newDiv.append(newInput1)\r\n");
      out.write("		newDiv.append(newInput2)\r\n");
      out.write("	    newDiv.append(newInput3)\r\n");
      out.write("	    newDiv.append(newInput4)\r\n");
      out.write("	    newDiv.append(newInput5)\r\n");
      out.write("	    newDiv.append(removeInput)\r\n");
      out.write("	    Form.append(newDiv)\r\n");
      out.write("	    			\r\n");
      out.write("	    index+=1\r\n");
      out.write("	    console.log(newDiv);\r\n");
      out.write("	    $(\"#showIndex\").text(index)\r\n");
      out.write("	    $(\"#index\").val(index)\r\n");
      out.write("	}); \r\n");
      out.write("\r\n");
      out.write("	$(document).on(\"click\", \"#removebtn\", function () { // 삭제\r\n");
      out.write("	    $(this).parent(\".newDiv\").remove()\r\n");
      out.write("	    resetIndex()\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function resetIndex(){ //삭제하면 인덱스 번호도 reset \r\n");
      out.write("	    index = 0\r\n");
      out.write("	    Form.children('div').each(function (){\r\n");
      out.write("	        var target = $(this).children(index)\r\n");
      out.write("	        target.attr(\"id\", target.attr(\"latitude\"+index))\r\n");
      out.write("	        target.attr(\"id\", target.attr(\"longitude\"+index))\r\n");
      out.write("	        target.attr(\"id\", target.attr(\"placeName\"+index))\r\n");
      out.write("	        target.attr(\"id\", target.attr(\"category\"+index))\r\n");
      out.write("	        target.attr(\"id\", target.attr(\"address\"+index))\r\n");
      out.write("	        index+=1\r\n");
      out.write("	    })\r\n");
      out.write("	    $(\"#showIndex\").text(index)\r\n");
      out.write("	    $(\"#index\").val(index)\r\n");
      out.write("	};\r\n");
      out.write("\r\n");
      out.write("	$(\"#insertButton\").trigger(\"click\") // 추가 버튼\r\n");
      out.write("	$(\"#showIndex\").text(index)       	\r\n");
      out.write("\r\n");
      out.write("	$(\"#frm\").submit(function(event){ //#frm의 data 전체를 ajax로 서버에 보내기\r\n");
      out.write("		event.preventDefault(); //원래 form의 기능인 submit를 ajax로 처리\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : $(\"#frm\").attr(\"method\"),\r\n");
      out.write("			url : $(\"#frm\").attr(\"action\"),\r\n");
      out.write("			data : $(\"#frm\").serialize(),\r\n");
      out.write("		    beforeSend: function(xhr){\r\n");
      out.write("	 		   	var token = $(\"meta[name='_csrf']\").attr('content');\r\n");
      out.write("	 			var header = $(\"meta[name='_csrf_header']\").attr('content');\r\n");
      out.write("			        xhr.setRequestHeader(header, token);\r\n");
      out.write("			},\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				if(data.search(\"insert-success\") > -1){\r\n");
      out.write("					$(\".modal-body\").text(\"작성되었습니다.\");\r\n");
      out.write("					$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("						$(\"#closeBtn\").click(function(event){\r\n");
      out.write("						event.preventDefault();\r\n");
      out.write("						location.href = \"/feed\"; // 성공시 이동 페이지\r\n");
      out.write("					});\r\n");
      out.write("				}\r\n");
      out.write("				else{\r\n");
      out.write("					$(\".modal-body\").text(\"다시입력해주세요\");\r\n");
      out.write("					$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("						$(\"#closeBtn\").click(function(event){\r\n");
      out.write("						event.preventDefault();\r\n");
      out.write("						location.href = \"mappage\"; //실패시 이동 페이지 \r\n");
      out.write("					});\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error : function(data){\r\n");
      out.write("				$(\".modal-body\").text(\"다시입력해주세요\");\r\n");
      out.write("				$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("					$(\"#closeBtn\").click(function(event){\r\n");
      out.write("					event.preventDefault();\r\n");
      out.write("					location.href = \"mappage\"; //실패시 이동 페이지\r\n");
      out.write("				});\r\n");
      out.write("			}			\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("*/\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/feed/mappage2.jsp(354,23) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plan.startDate}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /WEB-INF/views/feed/mappage2.jsp(355,23) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plan.endDate}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }
}
