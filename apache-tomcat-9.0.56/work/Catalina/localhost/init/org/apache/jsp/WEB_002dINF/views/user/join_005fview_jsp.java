/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-04-05 09:02:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(10);
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/sql.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-4.2.13.RELEASE.jar", Long.valueOf(1646873798857L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/x.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/user/../footer.jsp", Long.valueOf(1647391121162L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/spring-security-taglibs-4.2.13.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1560936316000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1644909417825L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/user/../header.jsp", Long.valueOf(1649049305126L));
    _jspx_dependants.put("jar:file:/D:/project_init/apache-tomcat-9.0.56/wtpwebapps/project_init/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta id=\"_csrf\" name=\"_csrf\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/b4e02812b5.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<!-- KAKAO API -->\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<!-- css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/header.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/footer.css\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#form-title {\r\n");
      out.write("	font-size: 40px;\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".validation {\r\n");
      out.write("	height:8px;\r\n");
      out.write("	font-size:14px; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".conditions {\r\n");
      out.write("	height: 300px;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("span.required {\r\n");
      out.write("	color: orange;\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label#male.active, label#male:hover, label#male:focus {\r\n");
      out.write("	background-color: #4E77FF;\r\n");
      out.write("	color: white;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label#female.active, label#female:hover, label#female:focus {\r\n");
      out.write("	background-color: #FF5C5C;\r\n");
      out.write("	color: white\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group label {\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group .form-control {\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 0;\r\n");
      out.write("	border-bottom: 1px solid #ced4da;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[id^=userAddr] {\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 0;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	border-bottom: 1px solid #ced4da;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group .form-control[readonly=readonly] {\r\n");
      out.write("	background-color: #F4F4F4;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#userinfo {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"navbar navbar-default fixed-top border-bottom pt-3 bg-white\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<a href=\"/init\" class=\"navbar-brand\">\r\n");
      out.write("				<i class=\"menu-icon fa-solid fa-house\"></i>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"input-group border rounded bg-light\">\r\n");
      out.write("		    	<div class=\"input-group-btn\">\r\n");
      out.write("		    		<button type=\"button\" class=\"btn btn-default mr-1\">filter</button>\r\n");
      out.write("		        	<button type=\"button\" class=\"btn btn-default dropdown-toggle mr-1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span class=\"caret\"></span></button>\r\n");
      out.write("		        	<ul class=\"dropdown-menu\">\r\n");
      out.write("		          		<li>filter 1</li>\r\n");
      out.write("		          		<li>filter 2</li>\r\n");
      out.write("		          		<li>filter 3</li>\r\n");
      out.write("		        	</ul>\r\n");
      out.write("		      	</div>\r\n");
      out.write("		      	<input type=\"text\" class=\"form-control bg-light mr-1\" size=\"30\" aria-label=\"000\" placeholder=\"search...\">\r\n");
      out.write("	    		<a href=\"search\" class=\"btn btn-default mr-1\"><i class=\"fa-brands fa-sistrix\"></i></a>	      	\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<ul class=\"nav navbar\">\r\n");
      out.write("			");
      if (_jspx_meth_s_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_s_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			<li class=\"mr-4 notice\">\r\n");
      out.write("				<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("					<i class=\"menu-icon fa-regular fa-bell\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("	        	<ul class=\"dropdown-menu\">\r\n");
      out.write("	        		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	        	</ul>\r\n");
      out.write("				\r\n");
      out.write("			</li>\r\n");
      out.write("			\r\n");
      out.write("			<li class=\"mr-4 msg\">\r\n");
      out.write("				<a href=\"#\">\r\n");
      out.write("					<i class=\"menu-icon fa-regular fa-comment-dots\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("			</li>\r\n");
      out.write("		</ul>\r\n");
      out.write("		\r\n");
      out.write("	</div>		\r\n");
      out.write("\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	$('#anFeed').click(function(e){\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		$('#loginModalBtn').trigger('click');\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"margin-top:90px; margin-bottom:50px;\">\r\n");
      out.write("	<!-- 회원가입 성공시 모달 -->\r\n");
      out.write("	<!-- modal button -->\r\n");
      out.write("	<input id=\"modalBtn\" type=\"hidden\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\" value=\"modal\">\r\n");
      out.write("	<!-- modal창 -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n");
      out.write("		<div class=\"modal-dialog modal-dialog-centered modal-sm text-center\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header bg-light\">\r\n");
      out.write("					<h4 class=\"modal-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JOIN</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body bg-light\">\r\n");
      out.write("					<h4>WELCOME!</h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-footer bg-light\">\r\n");
      out.write("					<button id=\"closeBtn\" type=\"button\" class=\"btn btn-default btn-success\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 회원 가입 창 -->	\r\n");
      out.write("	<h1 class=\"text-center mb-4 display-4\">WAYG</h1>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<form id=\"joinForm\" action=\"join\" method=\"post\" name=\"joinForm\">\r\n");
      out.write("		<div id=\"agreements\" class=\"mb-5\">\r\n");
      out.write("			<div class=\"conditions border px-2\">\r\n");
      out.write("				<h5><strong>WAYG 개인정보 수집 동의 요청서</strong></h5><br/>\r\n");
      out.write("				&nbsp;1. 위치를 기반으로 한 서비스 사용시 현재 위치를 설정하여 원하는 데이터를 제공하기 위한 목적으로 회원님의 현재 실시간 위치 정보를 요청할 수 있으며,\r\n");
      out.write("				  이는 위에 언급된 기능 이외에 다른 목적으로는 사용되지 않습니다.<br/><br/>\r\n");
      out.write("				&nbsp;2. 타 사이트 계정 사용한 소셜 로그인시 WAYG 서비스 이용을 위한 추가 정보를 별도로 기입하여야 합니다.<br/><br/>\r\n");
      out.write("				&nbsp;3. \r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"checkBox d-flex justify-content-end\">\r\n");
      out.write("				<p class=\"font-italic mt-3 mr-5\">WAYG에서 요청하는 개인정보 수집에 동의하시겠습니까?</p>\r\n");
      out.write("				<div class=\"form-check-inline\">\r\n");
      out.write("					<input type=\"radio\" name=\"agreements\" class=\"form-check-input\" value=\"agree\" id=\"agree\" />\r\n");
      out.write("					<label class=\"form-check-label\" for=\"flexCheckChecked\">\r\n");
      out.write("						동의\r\n");
      out.write("					</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"form-check-inline\">\r\n");
      out.write("					<input type=\"radio\" name=\"agreements\" class=\"form-check-input\" value=\"disagree\" id=\"disagree\" checked/>\r\n");
      out.write("					<label class=\"form-check-label\" for=\"flexCheckChecked\">\r\n");
      out.write("						비동의\r\n");
      out.write("					</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"userinfo\">\r\n");
      out.write("		    <input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("		\r\n");
      out.write("			<h1 class=\"mb-4 d-inline display-4\" id=\"form-title\">USER INFO</h1><p class=\"ml-2 d-inline font-italic text-secondary\"><span class=\"required\">*</span>로 표시된 부분은 필수 입력 사항입니다.</p>\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("		\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userEmail\" class=\"mt-2 col-2 border-right\">E-mail <span class=\"required\">*</span></label>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<input type=\"text\" class=\"userEmail form-control\" id=\"userEmail\" name=\"uEmail\" placeholder=\"EMAIL\" onkeyup=\"checkEmail()\" autocomplete=\"off\" maxlength=\"30\">\r\n");
      out.write("					<div class=\"userEmail-validation validation mt-1\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userPw1\" class=\"mt-2 col-2 border-right\">Password <span class=\"required\">*</span></label>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<input type=\"password\" class=\"userPw1 form-control\" id=\"userPw1\" name=\"uPw1\" placeholder=\"PASSWORD\" maxlength=\"16\">\r\n");
      out.write("					<div class=\"userPw1-validation validation\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>	\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userPw2\" class=\"mt-2 col-2\"></label>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<input type=\"password\" class=\"userPw2 form-control\" id=\"userPw2\" name=\"uPw2\" placeholder=\"CONFIRRM PASSWORD\" maxlength=\"16\" readonly=\"readonly\">\r\n");
      out.write("					<div class=\"userPw2-validation validation\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>	\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userNickName\" class=\"mt-2 col-2 border-right\">Nickname <span class=\"required\">*</span></label>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<input type=\"text\" class=\"userNickName form-control\" id=\"userNickName\" name=\"uNickName\" placeholder=\"NICKNAME\" onkeyup=\"checkNickName()\" autocomplete=\"off\" maxlength=\"20\">\r\n");
      out.write("	  				<div class=\"userNickName-validation validation\">\r\n");
      out.write("		  			</div>		\r\n");
      out.write("		  		</div>\r\n");
      out.write("			</div>	\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userBirth\" class=\"mt-2 col-2 border-right\">Birth <span class=\"required\">*</span></label>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<input type=\"text\" class=\"userBirth form-control\" id=\"userBirth\" name=\"uBirth\" placeholder=\"EX:19970501\" oninput=\"this.value = this.value.replace(/[^0-9]/g, '').replace(/(\\..*)\\./g, '$1');\" autocomplete=\"off\" maxlength=\"8\">\r\n");
      out.write("					<div class=\"userBirth-validation validation\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"btn-group\" class=\"mt-2 col-2 border-right\">Gender <span class=\"required\">*</span></label>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"btn-group btn-group-toggle col-3 row mx-0\" data-toggle=\"buttons\">\r\n");
      out.write("					<label id=\"male\" class=\"btn btn-outline-defalut border-white active\">\r\n");
      out.write("						<input type=\"radio\" name=\"uGender\" autocomplete=\"off\" value=\"MALE\" checked><i class=\"fa-solid fa-mars\"></i>\r\n");
      out.write("					</label>\r\n");
      out.write("					<label id=\"female\" class=\"btn btn-outline-defalut border-white \">\r\n");
      out.write("						<input type=\"radio\" name=\"uGender\" autocomplete=\"off\" value=\"FEMALE\"><i class=\"fa-solid fa-venus\"></i>\r\n");
      out.write("					</label>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>	\r\n");
      out.write("			\r\n");
      out.write("			<hr />\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userAddr1\" class=\"mt-2 col-2 border-right\">Post-code <span class=\"required\">*</span></label>\r\n");
      out.write("					<div class=\"form-inline mb-2 ml-2\">\r\n");
      out.write("						<div class=\"input-group\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control bg-white mr-2\" id=\"userPst\" name=\"uPst\" placeholder=\"POSTCODE\" onfocus=\"clickSerachPst()\" readonly>\r\n");
      out.write("							<span class=\"input-group-btn\">\r\n");
      out.write("								<button type=\"button\" id=\"searchPst\" class=\"btn btn-sm btn-dark\" onclick=\"serchPostCode()\"><i class=\"fa-brands fa-sistrix\"></i></button>\r\n");
      out.write("							</span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				<span id=\"guide\" style=\"color:#999;display:none\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group row mx-0\">\r\n");
      out.write("				<label for=\"userAddr1\" class=\"mt-2 col-2 border-right\">Address <span class=\"required\">*</span></label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control bg-white ml-2\" id=\"userAddr1\" name=\"uAddr1\" placeholder=\"ADDRESS1\" onfocus=\"clickSerachPst()\" readonly>\r\n");
      out.write("			</div>\r\n");
      out.write("				\r\n");
      out.write("			<div class=\"form-group row mx-0 pb-3\">\r\n");
      out.write("				<label for=\"userAddr2\" class=\"mt-2 col-2 border-right\">ADDRESS2</label>\r\n");
      out.write("				<input type=\"text\" class=\"form-control ml-2\" id=\"userAddr2\" name=\"uAddr2\" placeholder=\"ADDRESS2\" maxlength=\"50\">\r\n");
      out.write("			</div>		\r\n");
      out.write("		\r\n");
      out.write("			<hr />\r\n");
      out.write("		\r\n");
      out.write("			<div class=\"d-flex justify-content-end\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary border-white\">가입</button>\r\n");
      out.write("				<button type=\"button\" id=\"goback\" class=\"btn btn-danger border-white\">취소</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer class=\"bg-dark\">\r\n");
      out.write("\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$('input[name=agreements]').change(function() {\r\n");
      out.write("	if( $('input[name=agreements]:checked').val() == \"disagree\" ) {\r\n");
      out.write("		$('#userinfo').css('display', 'none');\r\n");
      out.write("	} else {\r\n");
      out.write("		$('#userinfo').css('display', 'block');\r\n");
      out.write("		// scroll을 부드럽게 이동시키는 메서드\r\n");
      out.write("		window.scrollTo({top: 450, left: 0, behavior:'smooth'});\r\n");
      out.write("		$('#userEmail').focus();\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//유효성 검사 통과유무 변수\r\n");
      out.write("var chkEmail = false;\r\n");
      out.write("var chkPw1 = false;\r\n");
      out.write("var chkPw2 = false;\r\n");
      out.write("var chkNick = false;\r\n");
      out.write("var chkBir = false;\r\n");
      out.write("var chkPst = false;\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write(" 	//1차 비밀번호 유효성검사\r\n");
      out.write("    $('.userPw1').keyup(function () {\r\n");
      out.write("    	$('#userPw2').val(''); //1차 pw input keyup시 2차 pw 입력값 초기화\r\n");
      out.write("    	$('.userPw2-validation').html(''); //1차 pw input keyup시 2차 pw validation 메세지 초기화\r\n");
      out.write("        var val = $('.userPw1').val();\r\n");
      out.write("        const regExp_pw = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&^])[A-Za-z\\d$@$!%*#?&^]{8,}$/;\r\n");
      out.write("\r\n");
      out.write("        if (regExp_pw.test(val) == false) {          \r\n");
      out.write("            $('.userPw1-validation').css('color', 'blue');\r\n");
      out.write("            $('.userPw1-validation').html('영문,숫자,특수문자를 혼합하여 8자 이상 16자 이하로 입력해주세요.');\r\n");
      out.write("            $('#userPw2').attr('readonly',true); //1차 pw 형식 안맞을시 2차 pw readonly true(입력불가)\r\n");
      out.write("            chkPw1 = false;\r\n");
      out.write("        } else {\r\n");
      out.write("            $('.userPw1-validation').css('color', 'green');\r\n");
      out.write("            $('.userPw1-validation').html('사용가능한 비밀번호 입니다.');\r\n");
      out.write("            $('#userPw2').attr('readonly',false); //1차 pw 형식 맞으면 2차 pw readonly false(입력가능)\r\n");
      out.write("            chkPw1 = true;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    //2차 비밀번호 유효성검사\r\n");
      out.write("    $('.userPw2').keyup(function () {\r\n");
      out.write("        var val = $('.userPw1').val();\r\n");
      out.write("        var checkVal = $('.userPw2').val();\r\n");
      out.write("        if (checkVal!=''){ //2차 pw 입력값 없을땐 validation 메세지 아무것도 안뜸\r\n");
      out.write("			if (val != checkVal) {\r\n");
      out.write("            	$('.userPw2-validation').css('color', 'blue');\r\n");
      out.write("            	$('.userPw2-validation').html('동일한 비밀번호를 입력해주세요.');\r\n");
      out.write("            	chkPw2 = false;\r\n");
      out.write("        	} else {\r\n");
      out.write("            	$('.userPw2-validation').css('color', 'green');\r\n");
      out.write("            	$('.userPw2-validation').html('비밀번호가 일치합니다.');\r\n");
      out.write("            	chkPw2 = true;\r\n");
      out.write("       		}\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    //생년월일 유효성검사\r\n");
      out.write("    $('.userBirth').keyup(function() {\r\n");
      out.write("    	var val = $('.userBirth').val();\r\n");
      out.write("    	const regExp_birth = /^(19[0-9][0-9]|20\\d{2})(0[0-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\r\n");
      out.write("    	\r\n");
      out.write("    	if(regExp_birth.test(val) == false) {\r\n");
      out.write("    		$('.userBirth-validation').css('color','blue');\r\n");
      out.write("    		$('.userBirth-validation').html('정확한 생년월일을 입력해주세요. EX:19970501');\r\n");
      out.write("    		chkBir = false;\r\n");
      out.write("    	} else {\r\n");
      out.write("    		$('.userBirth-validation').css('color','green');\r\n");
      out.write("    		$('.userBirth-validation').html(val.substr(0,4)+'년 '+val.substr(4,2)+'월 '+val.substr(6)+'일');\r\n");
      out.write("    		chkBir = true;\r\n");
      out.write("    	}\r\n");
      out.write("    });\r\n");
      out.write("     \r\n");
      out.write("    //회원가입\r\n");
      out.write("    $(\"#joinForm\").submit(function(event){\r\n");
      out.write("    	event.preventDefault();\r\n");
      out.write("    	//유효성검사 통과해야만 submit되게 함\r\n");
      out.write("    	if(!chkEmail) { \r\n");
      out.write("    		$('#userEmail').keyup().focus();\r\n");
      out.write("    	} else if(!chkPw1) {\r\n");
      out.write("    		$('#userPw1').keyup().focus();\r\n");
      out.write("    	} else if(!chkPw2) {\r\n");
      out.write("    		$('#userPw2').keyup().focus();\r\n");
      out.write("    	} else if(!chkNick) {\r\n");
      out.write("    		$('#userNickName').keyup().focus();\r\n");
      out.write("    	} else if(!chkBir) {\r\n");
      out.write("    		$('#userBirth').keyup().focus();\r\n");
      out.write("    	} else if(!chkPst) {\r\n");
      out.write("    		$('.userPst-validation').css('color', 'blue');\r\n");
      out.write("    		$('.userPst-validation').html('주소를 입력해주세요.');\r\n");
      out.write("    	} else {\r\n");
      out.write("    	$.ajax({\r\n");
      out.write("    		type : $(\"#joinForm\").attr(\"method\"),\r\n");
      out.write("    		url : $(\"#joinForm\").attr(\"action\"),\r\n");
      out.write("    		data : $(\"#joinForm\").serialize(),\r\n");
      out.write("    		success : function(data) {\r\n");
      out.write("    			if(data.search(\"join-success\") > -1) {\r\n");
      out.write("    			$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("    			$(\"#closeBtn\").click(function(event) {\r\n");
      out.write("    				event.preventDefault();\r\n");
      out.write("    				location.href=\"../\";\r\n");
      out.write("    			});\r\n");
      out.write("    			}\r\n");
      out.write("    			else {\r\n");
      out.write("    				$(\".modal-body\").text(\"다시 시도해 주세요.\"); //insert실패?\r\n");
      out.write("    				$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("    			}\r\n");
      out.write("    		},\r\n");
      out.write("    		error : function(data) {\r\n");
      out.write("    			$(\".modal-body\").text(\"전송 실패입니다. 다시 시도해 주세요\");\r\n");
      out.write("    			$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("    		}\r\n");
      out.write("    	});\r\n");
      out.write("    	}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#goback').click(function() {\r\n");
      out.write("    	$(\"#modalBtn\").trigger(\"click\");\r\n");
      out.write("    	$(\".modal-body\").text(\"메인 페이지로 돌아갈까요?\");\r\n");
      out.write("    	\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//email 유효성검사 및 중복 체크\r\n");
      out.write("function checkEmail() {\r\n");
      out.write("	var val = $('.userEmail').val();\r\n");
      out.write("    const regExp_email = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{3,6}(?:\\.[a-z]{2})?)$/; //이메일 확인 정규식\r\n");
      out.write("	\r\n");
      out.write("    \r\n");
      out.write("    if (regExp_email.test(val) == false) {\r\n");
      out.write("        $('.userEmail-validation').css('color', 'blue');\r\n");
      out.write("        $('.userEmail-validation').html('본인의 이메일을 입력해주세요.');\r\n");
      out.write("        chkEmail = false;\r\n");
      out.write("\r\n");
      out.write("    } else {\r\n");
      out.write("        \r\n");
      out.write("    	$.ajax({\r\n");
      out.write("			type : 'get',\r\n");
      out.write("			url : 'emailCheck',\r\n");
      out.write("			data : {id:val},\r\n");
      out.write("			success:function(res){\r\n");
      out.write("				console.log(\"emailCheck\");\r\n");
      out.write("				if(res != 1) {\r\n");
      out.write("					$('.userEmail-validation').css('color', 'green');\r\n");
      out.write("					$('.userEmail-validation').html(\"사용 가능한 이메일 입니다.\");\r\n");
      out.write("					chkEmail = true;\r\n");
      out.write("				} else{\r\n");
      out.write("					$('.userEmail-validation').css('color', 'red');\r\n");
      out.write("					$('.userEmail-validation').html(\"누군가 사용중인 이메일 입니다.\");\r\n");
      out.write("					chkEmail = false;\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error:function(){\r\n");
      out.write("				alert(\"에러입니다.\");\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//nickname 유효성검사 및 중복 체크\r\n");
      out.write("function checkNickName() {\r\n");
      out.write("	var val = $('.userNickName').val();\r\n");
      out.write("	const regExp_nick = /^[가-힣|a-z|A-Z|0-9|]{2,20}$/; //닉네임 한글,영문,숫자 2자이상 20자이하 정규식\r\n");
      out.write("	const regExp_onlynum = /^[0-9]*$/; //숫자만 입력하는 정규식\r\n");
      out.write("	\r\n");
      out.write("	if(regExp_onlynum.test(val) == false) { //숫자만으로 이루어지지 않았을때\r\n");
      out.write("		if(regExp_nick.test(val) == false) {\r\n");
      out.write("        	$('.userNickName-validation').css('color', 'blue');\r\n");
      out.write("        	$('.userNickName-validation').html('2자이상 20자이하로 입력해주세요.(영문,한글,숫자 사용가능. 숫자만X)');\r\n");
      out.write("			chkNick = false;\r\n");
      out.write("		} else {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : 'get',\r\n");
      out.write("				url : 'nickCheck',\r\n");
      out.write("				data : {nick:val},\r\n");
      out.write("				success : function(res){\r\n");
      out.write("					console.log('nickCheck');\r\n");
      out.write("					if(res != 1) {\r\n");
      out.write("			    		$('.userNickName-validation').css('color', 'green');\r\n");
      out.write("			    		$('.userNickName-validation').html('사용가능한 닉네임 입니다.');\r\n");
      out.write("			    		chkNick = true;\r\n");
      out.write("					} else {\r\n");
      out.write("						$('.userNickName-validation').css('color', 'red');\r\n");
      out.write("			    		$('.userNickName-validation').html('누군가 사용중인 닉네임 입니다.');\r\n");
      out.write("						chkNick = false;\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error:function(){\r\n");
      out.write("					alert(\"에러입니다.\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		} else { //숫자만으로 이루어진 경우\r\n");
      out.write("        	$('.userNickName-validation').css('color', 'blue');\r\n");
      out.write("        	$('.userNickName-validation').html('2자이상 20자이하로 입력해주세요.(영문,한글,숫자 사용가능. 숫자만X)');\r\n");
      out.write("        	chkNick = false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("//====== 주소 입력 ======\r\n");
      out.write("function clickSerachPst() { //POSTCODE input, ADDRESS1 input 포커스시 serchPst 클릭\r\n");
      out.write("	document.getElementById(\"searchPst\").click();\r\n");
      out.write("	document.getElementById(\"userPst\").blur();\r\n");
      out.write("	document.getElementById(\"userAddr1\").blur();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//카카오 api\r\n");
      out.write("function serchPostCode() {\r\n");
      out.write("    new daum.Postcode({\r\n");
      out.write("        oncomplete: function(data) {\r\n");
      out.write("            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("            // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("            var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("            var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                extraRoadAddr += data.bname;\r\n");
      out.write("            }\r\n");
      out.write("            // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("            if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("               extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("            }\r\n");
      out.write("            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("            if(extraRoadAddr !== ''){\r\n");
      out.write("                extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("            document.getElementById('userPst').value = data.zonecode;\r\n");
      out.write("            //document.getElementById(\"userAddr1\").value = roadAddr; // roadAddr + extraRoadAddr(ex:(공항동))로 표시하기 위해 밑으로 내림\r\n");
      out.write("            //document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress; //지번주소 입력 안받음\r\n");
      out.write("            \r\n");
      out.write("            // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("            if(roadAddr !== ''){\r\n");
      out.write("                //document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr;\r\n");
      out.write("                document.getElementById('userAddr1').value = roadAddr + extraRoadAddr;\r\n");
      out.write("            } else {\r\n");
      out.write("                //document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("                document.getElementById('userAddr1').value = roadAddr + '';\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("			var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("            // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("            if(data.autoRoadAddress) {\r\n");
      out.write("                var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("                guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("                guideTextBox.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("           /*  } else if(data.autoJibunAddress) {\r\n");
      out.write("                var expJibunAddr = data.autoJibunAddress;\r\n");
      out.write("                guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';\r\n");
      out.write("                guideTextBox.style.display = 'block'; */\r\n");
      out.write("                //지번주소 안받음\r\n");
      out.write("            } else {\r\n");
      out.write("                guideTextBox.innerHTML = '';\r\n");
      out.write("                guideTextBox.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("            document.getElementById(\"userAddr2\").focus(); // userAddr1입력 후 포커스\r\n");
      out.write("            $('.userPst-validation').html('');\r\n");
      out.write("            chkPst = true;\r\n");
      out.write("        }\r\n");
      out.write("    }).open();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_s_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  s:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_s_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_s_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_s_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_s_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/user/../header.jsp(46,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_s_005fauthorize_005f0.setAccess("isAnonymous()");
      int _jspx_eval_s_005fauthorize_005f0 = _jspx_th_s_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_s_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("				<li class=\"mr-4 feed\">\r\n");
        out.write("					<a href=\"feed\" id=\"anFeed\">\r\n");
        out.write("						<i class=\"menu-icon fa-regular fa-circle-user\"></i>\r\n");
        out.write("					</a>\r\n");
        out.write("				</li>\r\n");
        out.write("			");
      }
      if (_jspx_th_s_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.reuse(_jspx_th_s_005fauthorize_005f0);
      _jspx_th_s_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_s_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_s_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_s_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  s:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_s_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_s_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_s_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_s_005fauthorize_005f1.setParent(null);
      // /WEB-INF/views/user/../header.jsp(54,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_s_005fauthorize_005f1.setAccess("isAuthenticated()");
      int _jspx_eval_s_005fauthorize_005f1 = _jspx_th_s_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_s_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("				<li class=\"mr-4 feed\">\r\n");
        out.write("					<a href=\"feed\" id=\"loginFeed\">\r\n");
        out.write("						<i class=\"menu-icon fa-regular fa-circle-user\"></i>\r\n");
        out.write("					</a>\r\n");
        out.write("				</li>\r\n");
        out.write("			");
      }
      if (_jspx_th_s_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fs_005fauthorize_0026_005faccess.reuse(_jspx_th_s_005fauthorize_005f1);
      _jspx_th_s_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_s_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_s_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/user/../header.jsp(66,11) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1);
      // /WEB-INF/views/user/../header.jsp(66,11) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(10);
      // /WEB-INF/views/user/../header.jsp(66,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			          	<li class=\"list-group-item\">\r\n");
            out.write("			          		alarm");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("			          	</li>\r\n");
            out.write("		          	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
